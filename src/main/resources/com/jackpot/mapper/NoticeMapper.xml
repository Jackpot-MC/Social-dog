<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jackpot.mapper.NoticeMapper">

	<resultMap id="noticeMap" type="com.jackpot.domain.NoticeVO">
		<id property="noticeId" column="notice_id" />
		<result property="noticeTitle" column="notice_title" />
		<result property="noticeContent" column="notice_content" />
		<result property="memberId" column="member_id" />
		<result property="loginId" column="member_login_id" />
		<result property="loginPwd" column="member_login_pwd" />
		<result property="regDate" column="reg_date" />
		<result property="updateDate" column="update_date" />
	</resultMap>
	
	<select id = "read" resultMap="noticeMap">
		select notice_id, notice_title, notice_content, notice.member_id, member.member_login_id, member.member_login_pwd, reg_date, update_date
		from notice left outer join member
		on notice.member_id = member.member_id
		where notice_id = #{noticeId}
	</select>
	
	<insert id = "insert">
		insert into notice(notice_title, notice_content)
		values(#{noticeTitle}, #{noticeContent})

		<selectKey resultType= "Long" keyProperty="noticeId" keyColumn="notice_id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id = "update">
		update notice set
			notice_title = #{noticeTitle},
			notice_content = #{noticeContent}
		where notice_id = #{noticeId}
	</update>
	
	<delete id="delete">
		delete from notice where notice_id = #{noticeId}
	</delete>
	
	<select id="getList" resultType="com.jackpot.domain.NoticeVO">
		select * from notice
		order by notice_id desc
		limit 0, 10
	</select>

	<select id="getListWithPaging" resultType="NoticeVO">
		select notice_id, notice_title, notice_content, notice.member_id, member.member_login_id, member.member_login_pwd, reg_date, update_date
		from notice left outer join member
		on notice.member_id = member.member_id
		<where>
			<include refid="criteria"></include>
		</where>
		order by notice_id desc
		limit #{offset}, #{amount}
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*) from notice left outer join member
		on notice.member_id = member.member_id
		<where>
			<include refid="criteria"></include>
		</where>
	</select>

	<select id="getmemberLoginIdMapper" resultType="memberVO">
		select * from member;
	</select>
	
	<sql id="criteria"> <!-- 중복 SQL 구문 분리, id 지정 -->
		<trim prefixOverrides = "OR">
			<foreach item = "type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							notice_title like CONCAT('%',#{keyword},'%')
						</when>
						<when test="type == 'C'.toString()">
							notice_content like CONCAT('%',#{keyword},'%')
						</when>
						<when test="type == 'A'.toString()">
							member.member_login_id like CONCAT('%',#{keyword},'%')
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>	
	</sql>

</mapper>